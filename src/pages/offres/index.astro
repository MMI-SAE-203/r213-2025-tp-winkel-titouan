---
import Header from "../../components/Header.astro";
import Base from "../../layouts/Base.astro";
import Card from "../../components/Card.astro";
import Add from "../../pages/offres/add.astro";
import { getOffres } from "../../backend.mjs";
import { filterByPrix } from "../../backend.mjs";

let message = "";
let offres = [];
if (Astro.request.method === "POST") {
    const data = await Astro.request.formData();
    const minPrix = parseInt(data.get("minPrix"));
    const maxPrix = parseInt(data.get("maxPrix"));

    if (minPrix > 0 && maxPrix > 0 && maxPrix > minPrix) {
        offres = await filterByPrix(minPrix, maxPrix);
        if (offres.length === 0) {
            message = `Pas d'offres entre ${minPrix}€ et ${maxPrix}€`;
        } else {
            message = `Liste des offres entre ${minPrix}€ et ${maxPrix}€`;
        }
    } else {
        message = "Veuillez entrer des valeurs valides pour le prix.";
        offres = await getOffres();
    }
} else {
    offres = await getOffres();
}

/*
const offres = [
    {
        adresse: "2821 Lake Sevilla, Palm Harbor, TX",
        favori: true,
        id: "64l3n8nar836i5j",
        nbChambres: 4,
        nbSdb: 2,
        nomMaison: "Beverly Springfield",
        prix: 2700,
        surface: 45,
        imgUrl: "image1.png",
    },
    {
        adresse: "2699 Green Valley, Highland Lake",
        favori: true,
        id: "lo831zeg10hpm9y",
        nbChambres: 4,
        nbSdb: 2,
        nomMaison: "Palm Harbor",
        prix: 2095,
        surface: 42,
        imgUrl: "image2.png",
    },
    {
        adresse: "909 Woodland St, Michigan, IN",
        favori: false,
        id: "s1zuhj19x8eb242",
        nbChambres: 4,
        nbSdb: 3,
        nomMaison: "Faulkner Ave",
        prix: 4550,
        surface: 80,
        imgUrl: "image3.png",
    },
];
*/
---

<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <title>Offres</title>
    </head>
    <body>
        <form action="/offres" method="POST">
            <input type="number" name="minPrix" placeholder="Prix minimum" />
            <input type="number" name="maxPrix" placeholder="Prix maximum" />
            <input type="submit" value="Filtrer par prix" />
        </form>

        <Base>
            <h1>Découvrez les offres</h1>
        </Base>

        <div>
            {
                offres.map((offre) => (
                    <ul>
                        <Card />
                    </ul>
                ))
            }
        </div>

        <div x-data="{ showFavorites: false }">
            <button @click="showFavorites = !showFavorites">
                <span x-show="showFavorites == false">Afficher les favoris</span
                >
                <span x-show="showFavorites == true">Afficher tout</span>
            </button>

            <div x-show="!showFavorites">
                {offres.map((offre) => <Card {...offre} />)}
            </div>
            <div x-show="showFavorites">
                {offres.map((offre) => offre.favori && <Card {...offre} />)}
            </div>
        </div>

        <Add />
    </body>
</html>
